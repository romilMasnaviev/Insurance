TODO**Контекст задачи (краткое описание) **
Ментор обращает ваше внимание на класс
TravelCalculatePremiumRequestValidator.

Ментор просит вас подумать над следующими вопросами:
Что не так с этим классом?
Как можно улучшить техническое решение валидации запроса?

Перед тем как читать дальше остановитесь, и попробуйте
самостоятельно ответить на вопросы выше.

Если присмотреться к технической реализации валидации запроса
в классе TravelCalculatePremiumRequestValidator можно увидеть
что валидация каждого поля из запроса оформлена в виде
отдельного метода внутри класса. Такое техническое решение
плохо приспособлено к дальнейшему расширению бизнес функционала.
Почему? Потому что любая новая валидация будет добавляться в класс
TravelCalculatePremiumRequestValidator в виде нового метода и
класс будет увеличиваться и увеличиваться в размерах. Большие классы
это классы с большой функциональностью, которые не следуют принципу
SRP (Single Responsibility Principle). Еще одна проблема связанная
с этим классом это тесты. Чем больше класс тем сложнее будет его
тестировать.

Одно из решений проблем описанных выше это разделение функционала
класса TravelCalculatePremiumRequestValidator. Как можно поделить
функционал класса? Очевидно напрашивается вынесение каждой валидации
в отдельный класс.

Ваша задача: вынести все валидации из класса
TravelCalculatePremiumRequestValidator в отдельные классы.
В классе TravelCalculatePremiumRequestValidator должен остаться код
вызова каждой валидации.

Создайте отдельные тестовые классы для каждой валидации.

TODO**Что было сделано и как? (краткое описание)**
Для каждой валидации были созданы классы и методы разбросаны по ним. Также переработаны тесты.


TODO**Зачем это было сделано? Чему научился в процессе выполнения задания?**
Когда только прочитал, показалось что это излишнее, но прописав тесты понял, что тестирование
нового кода намного проще, чем старого. Возможно в дальнейшем появится какая-то более сложная
логика валидации. Тогда это будет на все 200% оправдано

TODO**Сколько потратил времени на выполнение задачи?**
30 минут.

TODO**Заметки, идеи, предложения в свободной форме**