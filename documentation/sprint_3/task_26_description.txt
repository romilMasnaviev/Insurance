TODO**Контекст задачи (краткое описание) **
Узнайте для чего используют библиотеку Lombok.
(https://www.baeldung.com/intro-to-project-lombok)

Добавьте в проект библиотеку Lombok.

	compileOnly('org.projectlombok:lombok:1.18.32')
	annotationProcessor('org.projectlombok:lombok:1.18.32')

	testCompileOnly('org.projectlombok:lombok:1.18.32')
	testAnnotationProcessor('org.projectlombok:lombok:1.18.32')

В IntelliJIdea File -> Settings -> "Enable annotation processing"
поставить галочку!

Примените Lombok для генерации get/set методов и конструкторов
для классов запроса и ответа:

Прочитайте и поэкспериментируйте
с Lombok аннотациями описанными в статье:
https://habr.com/ru/articles/812101/

TODO**Что было сделано и как? (краткое описание)**
Прочитал статью, узнал что помимо get и set методов есть еще очень много других.
Полезными показались
@Accessors(fluent = true) - убирает get/set приставки
@Builder - удобная аннотация, которая позволяет использовать одноименный паттерн
@RequirementArgsConstructor - конструктор final полей
@Logger (различные варианты логгеров)

Также узнал что есть DeLombok, позволяющий вернуть весь сгенеренный код.
Есть аннотации Equals и HashCode, их можно настраивать.

Прочитав вторую статью понял, что это субъективное мнение автора. На данном этапе
сделал аннотации по такому принципу
Request - запрещаем изменять поля, добавляем только Builder для тестирования и get для чтения
Response - запрещаем get методы, добавляем Builder для построения ответа


Что сделал:
Изменил DTO слой используя get/set/Builder аннотации, изменил тесты.
Добавил аннотацию RequiredArgsConstructor в сервисы и контроллеры

TODO**Зачем это было сделано? Чему научился в процессе выполнения задания?**
Уменьшить количество кода, не относящегося к бизнес-логике

TODO**Сколько потратил времени на выполнение задачи?**


TODO**Заметки, идеи, предложения в свободной форме**