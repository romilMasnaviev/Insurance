TODO**Контекст задачи (краткое описание) **
Ваша задача: ознакомиться с планом ментора по реализации
расчёта премии для медицинского риска. Обсудить его с ментором,
задать все возникшие у вас вопросы и получить на них ответы.

План ментора по реализации расчёта премии для медицинского риска.

1. Установить на локальный компьютер MySQL Community Server
реляционную базу данных, которую будет использовать приложение.

2. Установить MySQL Workbench как приложение для написания
и выполнения SQL запросов к MySQL Community Server.

3. Создать локальную базу данных для приложения.

4. Создать в базе данных таблицу для хранения классификаторов.

5. Создать классификатор RISK_TYPE в базе данных со всеми
перечисленными бизнесом рисками доступными для travel policy.

6. Добавить в запрос секцию selected_risks, в которой
можно будет указывать выбранные клиентом риски.

7. Добавить в приложение интеграцию с реляционной базой данных.
А в тесты добавить интеграцию с in memory H2 базой данных.

8. Написать Java код для поиска значения классификатора в базе данных.

9. Реализовать валидацию, которая будет проверять, что в секции
selected_risks указаны только доступные/разрешённые типы рисков.

10. Реализовать валидацию, для проверки, что в секции запроса
selected_risks указан хотя бы один риск. Запрос без указания
рисков страхования должен считаться некорректным.

11. Создать классификатор COUNTRY в базе данных.

12. Добавить в запрос поле country.

13. Создать валидацию, которая проверяет если выбран медицинский риск,
то поле country является обязательным.

14. Создать валидацию, для проверки правильности указания значения
в поле country согласно значениям классификатора в базе данных.

15. Добавить в базу данных таблицу CountryDefaultDayPremium.

16. Реализовать: premium = CountryDefaultDayPremium * DayCount.

17. Добавить в запрос поле возраст клиента.

18. Написать валидацию на обязательность указания возраста
клиента если выбран медицинский риск.

19. Добавить в базу данных таблицу для задания зависимости
между возрастом клиента и AgeCoefficient.

20. Реализовать: premium = CountryDefaultDayPremium * DayCount * AgeCoefficient

21. Добавить в запрос поле insuranceLimit.

22. Написать валидацию на обязательность указания insuranceLimit
    клиента если выбран медицинский риск.

23. Добавить в базу данных таблицу для задания зависимости
    между insuranceLimit и InsuranceLimitCoefficient.

24. Реализовать полный расчёт премии для медицинского риска:
premium = CountryDefaultDayPremium * DayCount * AgeCoefficient * InsuranceLimitCoefficient.

25. Написать полноценные acceptance тесты на функциональность расчёта
премии для медицинского риска.

После реализации всех перечисленных выше шагов система должна
поддерживать расчёт премии для медицинского риска и быть готовой
к запуску в продакшене.


TODO**Что было сделано и как? (краткое описание)**
Прочитал план. Он оказался совсем не такой, как мой.

TODO**Зачем это было сделано? Чему научился в процессе выполнения задания?**
Для того, чтобы понимать, как писать требования к системе, исходящие от бизнеса.

TODO**Сколько потратил времени на выполнение задачи?**
10 минут

TODO**Заметки, идеи, предложения в свободной форме**